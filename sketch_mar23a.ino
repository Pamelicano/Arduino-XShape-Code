#include <LiquidCrystal_I2C.h>

#include <DHT.h>  

#define DHTPIN 2       // –ü–∏–Ω, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –ø–æ–¥–∫–ª—é—á–µ–Ω DHT11
#define DHTTYPE DHT11  
DHT dht(DHTPIN, DHTTYPE);

int buzzer = 8;        // –ü–∏–Ω –¥–ª—è –±—É–∑–∑–µ—Ä–∞
int lightSensor = A0;  // –ü–∏–Ω —Ñ–æ—Ç–æ—Ä–µ–∑–∏—Å—Ç–æ—Ä–∞

// –ü–æ—Ä–æ–≥–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
int tempThreshold = 30;     // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
int humidityThreshold = 50; // (–ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤–ª–∞–∂–Ω–æ—Å—Ç–∏)
int lightThreshold = 600;   // –Ø—Ä–∫–æ—Å—Ç—å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (–ø–æ–¥–±–∏—Ä–∞–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é)

// –ù–æ—Ç—ã "Happy Birthday"
int melody[] = {262, 262, 294, 262, 349, 330,
                262, 262, 294, 262, 392, 349,
                262, 262, 523, 440, 349, 330, 294,
                466, 466, 440, 349, 392, 349};
int durations[] = {4, 8, 4, 4, 4, 2,
                   4, 8, 4, 4, 4, 2,
                   4, 8, 4, 4, 4, 4, 2,
                   4, 8, 4, 4, 4, 2};

void setup() {
  pinMode(buzzer, OUTPUT);
  pinMode(lightSensor, INPUT);
  dht.begin();
  Serial.begin(9600); // –í–∫–ª—é—á–∞–µ–º Serial Monitor
}

void loop() {
  // –ß–∏—Ç–∞–µ–º –ø–æ–∫–∞–∑–∞–Ω–∏—è –¥–∞—Ç—á–∏–∫–æ–≤
  float temp = dht.readTemperature(); // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ ¬∞C
  float humidity = dht.readHumidity(); // –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤ %
  int light = analogRead(lightSensor); // –û—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç—å (0-1023)

  // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ Serial Monitor
  Serial.print("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ");
  Serial.print(temp);
  Serial.print("¬∞C (–ø–æ—Ä–æ–≥: ");
  Serial.print(tempThreshold);
  Serial.println("¬∞C)");

  Serial.print("–í–ª–∞–∂–Ω–æ—Å—Ç—å: ");
  Serial.print(humidity);
  Serial.print("% (–ø–æ—Ä–æ–≥: ");
  Serial.print(humidityThreshold);
  Serial.println("%)");

  Serial.print("–û—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å: ");
  Serial.print(light);
  Serial.print(" (–ø–æ—Ä–æ–≥: ");
  Serial.print(lightThreshold);
  Serial.println(")");

  Serial.println("--------------------------------");

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è
  if (temp > tempThreshold && light > lightThreshold) {
    playMelody(); // –í–∫–ª—é—á–∞–µ–º –±—É–∑–∑–µ—Ä
  } else {
    noTone(buzzer); // –í—ã–∫–ª—é—á–∞–µ–º –∑–≤—É–∫
  }

  delay(2000); // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑ –≤ 2 —Å–µ–∫—É–Ω–¥—ã
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è –º–µ–ª–æ–¥–∏–∏
void playMelody() {
  Serial.println("üî• –ñ–ê–†–ö–û –∏ –°–í–ï–¢–õ–û! –í–∫–ª—é—á–∞—é Happy Birthday! üé∂");

  for (int i = 0; i < 25; i++) {
    int duration = 1000 / durations[i];
    tone(buzzer, melody[i], duration);
    delay(duration * 1.3);
    noTone(buzzer);
  }

  Serial.println("üéµ –ú–µ–ª–æ–¥–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞. –ñ–¥—ë–º –Ω–æ–≤–æ–≥–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è.");
}

